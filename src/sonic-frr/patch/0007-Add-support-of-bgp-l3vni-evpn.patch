From 369bbb4d62aa47d5a6d5157ca6ea819c4cb80f15 Mon Sep 17 00:00:00 2001
From: Stepan Blyschak <stepanb@nvidia.com>
Date: Thu, 20 Oct 2022 13:19:31 +0000
Subject: [PATCH 07/13] Added support of L3VNI EVPN

This is temp patch till Prefix to ARP indirection is add in neighorch

Signed-off-by: Kishore Kunal <kishore.kunal@broadcom.com>
Signed-off-by: Stepan Blyschak <stepanb@nvidia.com>
---
 lib/nexthop.c        |  1 +
 lib/nexthop.h        |  7 ++++++-
 zebra/rt_netlink.c   | 15 ++++++++++++++-
 zebra/zapi_msg.c     |  4 ++++
 zebra/zebra_dplane.c |  2 +-
 5 files changed, 26 insertions(+), 3 deletions(-)

diff --git a/lib/nexthop.c b/lib/nexthop.c
index a1ce22e3b..10a87f072 100644
--- a/lib/nexthop.c
+++ b/lib/nexthop.c
@@ -813,6 +813,7 @@ void nexthop_copy_no_recurse(struct nexthop *copy,
 	memcpy(&copy->src, &nexthop->src, sizeof(nexthop->src));
 	memcpy(&copy->rmap_src, &nexthop->rmap_src, sizeof(nexthop->rmap_src));
 	copy->rparent = rparent;
+	memcpy(&copy->nh_encap.encap_data.rmac, &nexthop->nh_encap.encap_data.rmac, ETH_ALEN);
 	if (nexthop->nh_label)
 		nexthop_add_labels(copy, nexthop->nh_label_type,
 				   nexthop->nh_label->num_labels,
diff --git a/lib/nexthop.h b/lib/nexthop.h
index 320b46315..77eea3674 100644
--- a/lib/nexthop.h
+++ b/lib/nexthop.h
@@ -66,6 +66,11 @@ enum nh_encap_type {
 /* Backup index value is limited */
 #define NEXTHOP_BACKUP_IDX_MAX 255

+struct vxlan_nh_encap {
+	vni_t vni;
+	struct ethaddr rmac;
+};
+
 /* Nexthop structure. */
 struct nexthop {
 	struct nexthop *next;
@@ -135,7 +140,7 @@ struct nexthop {
 	/* Encapsulation information. */
 	enum nh_encap_type nh_encap_type;
 	union {
-		vni_t vni;
+		struct vxlan_nh_encap encap_data;
 	} nh_encap;

 	/* SR-TE color used for matching SR-TE policies */
diff --git a/zebra/rt_netlink.c b/zebra/rt_netlink.c
index 03c84d6dc..a56a95276 100644
--- a/zebra/rt_netlink.c
+++ b/zebra/rt_netlink.c
@@ -1869,6 +1869,7 @@ static int netlink_route_nexthop_encap(struct nlmsghdr *n, size_t nlen,
 				       struct nexthop *nh)
 {
 	struct rtattr *nest;
+	struct vxlan_nh_encap* encap_data;

 	switch (nh->nh_encap_type) {
 	case NET_VXLAN:
@@ -1879,9 +1880,21 @@ static int netlink_route_nexthop_encap(struct nlmsghdr *n, size_t nlen,
 		if (!nest)
 			return false;

+		encap_data = &nh->nh_encap.encap_data;
+
 		if (!nl_attr_put32(n, nlen, 0 /* VXLAN_VNI */,
-				   nh->nh_encap.vni))
+				   encap_data->vni))
+			return false;
+
+		if (ZEBRA_DEBUG_KERNEL)
+			zlog_debug(
+				"%s: VNI:%d RMAC:%pEA", __func__, encap_data->vni,
+				&encap_data->rmac);
+
+		if (!nl_attr_put(n, nlen, 1 /* VXLAN_RMAC */,
+					&encap_data->rmac, sizeof(encap_data->rmac)))
 			return false;
+
 		nl_attr_nest_end(n, nest);
 		break;
 	}
diff --git a/zebra/zapi_msg.c b/zebra/zapi_msg.c
index 5cf7d815d..529cbb44b 100644
--- a/zebra/zapi_msg.c
+++ b/zebra/zapi_msg.c
@@ -1577,6 +1577,8 @@ static struct nexthop *nexthop_from_zapi(const struct zapi_nexthop *api_nh,
 			vtep_ip.ipa_type = IPADDR_V4;
 			memcpy(&(vtep_ip.ipaddr_v4), &(api_nh->gate.ipv4),
 			       sizeof(struct in_addr));
+			memcpy(&(nexthop->nh_encap.encap_data.rmac),
+				   &api_nh->rmac, ETH_ALEN);
 			zebra_rib_queue_evpn_route_add(
 				api_nh->vrf_id, &api_nh->rmac, &vtep_ip, p);
 		}
@@ -1610,6 +1612,8 @@ static struct nexthop *nexthop_from_zapi(const struct zapi_nexthop *api_nh,
 			vtep_ip.ipa_type = IPADDR_V6;
 			memcpy(&vtep_ip.ipaddr_v6, &(api_nh->gate.ipv6),
 			       sizeof(struct in6_addr));
+			memcpy(&(nexthop->nh_encap.encap_data.rmac),
+				   &api_nh->rmac, ETH_ALEN);
 			zebra_rib_queue_evpn_route_add(
 				api_nh->vrf_id, &api_nh->rmac, &vtep_ip, p);
 		}
diff --git a/zebra/zebra_dplane.c b/zebra/zebra_dplane.c
index 656ebcf3b..bd59df189 100644
--- a/zebra/zebra_dplane.c
+++ b/zebra/zebra_dplane.c
@@ -2420,7 +2420,7 @@ int dplane_ctx_route_init(struct zebra_dplane_ctx *ctx, enum dplane_op_e op,
 		zl3vni = zl3vni_from_vrf(nexthop->vrf_id);
 		if (zl3vni && is_l3vni_oper_up(zl3vni)) {
 			nexthop->nh_encap_type = NET_VXLAN;
-			nexthop->nh_encap.vni = zl3vni->vni;
+			nexthop->nh_encap.encap_data.vni = zl3vni->vni;
 		}
 	}

--
2.30.2

