From 6fe32f784f57b4f10b96c9cdb938bf5ebf097fa2 Mon Sep 17 00:00:00 2001
From: Carmine Scarpitta <carmine.scarpitta@uniroma2.it>
Date: Fri, 7 Jul 2023 02:55:18 +0200
Subject: [PATCH 1/2] zebra: Abstract `dplane_ctx_route_init` to init route
 without copying

The function `dplane_ctx_route_init` initializes a dplane route context
from the route object passed as an argument. Let's abstract this
function to allow initializing the dplane route context without actually
copying a route object.

This allows us to use this function for initializing a dplane route
context when we don't have any route to copy in it.

Signed-off-by: Carmine Scarpitta <carmine.scarpitta@uniroma2.it>

diff --git a/zebra/zebra_dplane.c b/zebra/zebra_dplane.c
index 83a38c2199..ae87e4f8b6 100644
--- a/zebra/zebra_dplane.c
+++ b/zebra/zebra_dplane.c
@@ -3257,7 +3257,7 @@ int dplane_ctx_route_init_basic(struct zebra_dplane_ctx *ctx,
 {
 	int ret = EINVAL;
 
-	if (!ctx || !re)
+	if (!ctx)
 		return ret;
 
 	dplane_intf_extra_list_init(&ctx->u.rinfo.intf_extra_list);
@@ -3265,6 +3265,13 @@ int dplane_ctx_route_init_basic(struct zebra_dplane_ctx *ctx,
 	ctx->zd_op = op;
 	ctx->zd_status = ZEBRA_DPLANE_REQUEST_SUCCESS;
 
+	/* This function may be called to create/init a dplane context, not
+	 * necessarily to copy a route object. Let's return if there is no route
+	 * object to copy.
+	 */
+	if (!re)
+		return AOK;
+
 	ctx->u.rinfo.zd_type = re->type;
 	ctx->u.rinfo.zd_old_type = re->type;
 
@@ -3296,6 +3303,8 @@ int dplane_ctx_route_init_basic(struct zebra_dplane_ctx *ctx,
 
 /*
  * Initialize a context block for a route update from zebra data structs.
+ * If the `rn` or `re` parameters are NULL, this function only initializes the
+ * dplane context without copying a route object into it.
  */
 int dplane_ctx_route_init(struct zebra_dplane_ctx *ctx, enum dplane_op_e op,
 			  struct route_node *rn, struct route_entry *re)
@@ -3312,9 +3321,17 @@ int dplane_ctx_route_init(struct zebra_dplane_ctx *ctx, enum dplane_op_e op,
 	const struct interface *ifp;
 	struct dplane_intf_extra *if_extra;
 
-	if (!ctx || !rn || !re)
+	if (!ctx)
 		return ret;
 
+	/*
+	 * Initialize the dplane context and return, if there is no route
+	 * object to copy
+	 */
+	if (!re || !rn)
+		return dplane_ctx_route_init_basic(ctx, op, NULL, NULL, NULL,
+						   AFI_UNSPEC, SAFI_UNSPEC);
+
 	/*
 	 * Let's grab the data from the route_node
 	 * so that we can call a helper function
-- 
2.17.1

