From 623bfe6d7e50fe57f57b0188fb0830d4790538a0 Mon Sep 17 00:00:00 2001
From: Soumya Roy <souroy@nvidia.com>
Date: Fri, 21 Mar 2025 20:06:59 +0000
Subject: [PATCH 42/56] zebra: V6 RA not sent anymore after interface
 up-down-up

Issue:
Once interface is shutdown, the interface is removed from
wheel timer. Now when the interface is up again, current code
won't add the interface to wheel timer again, so it won't send RA
anymore for that interface

Fix:
Moved wheel_add for interface inside rtadv_start_interface_events
This is more common function which gets triggered for both
RA enable and interface up event

Also on any kind of interface activation event, we try to send
RA as soon as possible. This is to satisfy requirement where
quick RA is needed, especially for some convergence, dependent on
RA.

Testing:
Did ineterface up to down to up
Added debug log for RA, checked it is getting advertised preodically
after when up at up state

show bgp summary for 512 bgp peers for bgp bgp unnumbered works fine.

Signed-off-by: Soumya Roy <souroy@nvidia.com>
---
 zebra/interface.c |  3 ++-
 zebra/rtadv.c     | 24 +++++++++++++++++-------
 zebra/rtadv.h     |  4 ++--
 3 files changed, 21 insertions(+), 10 deletions(-)

diff --git a/zebra/interface.c b/zebra/interface.c
index e49e8eac5e..e64e8271f7 100644
--- a/zebra/interface.c
+++ b/zebra/interface.c
@@ -987,6 +987,7 @@ void if_down(struct interface *ifp)
 	zif->down_count++;
 	frr_timestamp(2, zif->down_last, sizeof(zif->down_last));
 
+	rtadv_stop_ra(ifp, true);
 	if_down_nhg_dependents(ifp);
 
 	/* Handle interface down for specific types for EVPN. Non-VxLAN
@@ -3704,7 +3705,7 @@ int if_shutdown(struct interface *ifp)
 
 	if (ifp->ifindex != IFINDEX_INTERNAL) {
 		/* send RA lifetime of 0 before stopping. rfc4861/6.2.5 */
-		rtadv_stop_ra(ifp);
+		rtadv_stop_ra(ifp, false);
 		if (if_unset_flags(ifp, IFF_UP) < 0) {
 			zlog_debug("Can't shutdown interface %s", ifp->name);
 			return -1;
diff --git a/zebra/rtadv.c b/zebra/rtadv.c
index 014021dba6..ab796fa44d 100644
--- a/zebra/rtadv.c
+++ b/zebra/rtadv.c
@@ -1333,8 +1333,11 @@ static void rtadv_start_interface_events(struct zebra_vrf *zvrf,
 	}
 
 	adv_if = adv_if_add(zvrf, zif->ifp->name);
-	if (adv_if != NULL)
+	if (adv_if != NULL) {
+		rtadv_send_packet(zvrf->rtadv.sock, zif->ifp, RA_ENABLE);
+		wheel_add_item(zrouter.ra_wheel, zif->ifp);
 		return; /* Already added */
+	}
 
 	if (if_join_all_router(zvrf->rtadv.sock, zif->ifp)) {
 		/*Failed to join on 1st attempt, wait random amount of time between 1 ms 
@@ -1346,6 +1349,9 @@ static void rtadv_start_interface_events(struct zebra_vrf *zvrf,
 
 	if (adv_if_list_count(&zvrf->rtadv.adv_if) == 1)
 		rtadv_event(zvrf, RTADV_START, 0);
+
+	rtadv_send_packet(zvrf->rtadv.sock, zif->ifp, RA_ENABLE);
+	wheel_add_item(zrouter.ra_wheel, zif->ifp);
 }
 
 void ipv6_nd_suppress_ra_set(struct interface *ifp,
@@ -1394,7 +1400,6 @@ void ipv6_nd_suppress_ra_set(struct interface *ifp,
 					RTADV_NUM_FAST_REXMITS;
 			}
 
-			wheel_add_item(zrouter.ra_wheel, ifp);
 			rtadv_start_interface_events(zvrf, zif);
 		}
 	}
@@ -1514,20 +1519,25 @@ stream_failure:
  * ceasing to advertise and want to let our neighbors know.
  * RFC 4861 secion 6.2.5
  */
-void rtadv_stop_ra(struct interface *ifp)
+void rtadv_stop_ra(struct interface *ifp, bool if_down_event)
 {
 	struct zebra_if *zif;
 	struct zebra_vrf *zvrf;
 
-	zif = ifp->info;
-	zvrf = rtadv_interface_get_zvrf(ifp);
-
 	/*Try to delete from ra wheels */
 	wheel_remove_item(zrouter.ra_wheel, ifp);
 
+	zif = ifp->info;
+	zvrf = rtadv_interface_get_zvrf(ifp);
+
 	/*Turn off event for ICMPv6 join*/
 	EVENT_OFF(zif->icmpv6_join_timer);
 
+	if (if_down_event) {
+		/* Nothing to do more, return */
+		return;
+	}
+
 	if (zif->rtadv.AdvSendAdvertisements)
 		rtadv_send_packet(zvrf->rtadv.sock, ifp, RA_SUPPRESS);
 }
@@ -1555,7 +1565,7 @@ void rtadv_stop_ra_all(void)
 				       rprefix)
 				rtadv_prefix_reset(zif, rprefix, rprefix);
 
-			rtadv_stop_ra(ifp);
+			rtadv_stop_ra(ifp, false);
 		}
 }
 
diff --git a/zebra/rtadv.h b/zebra/rtadv.h
index 73d737ce41..5b92d570d2 100644
--- a/zebra/rtadv.h
+++ b/zebra/rtadv.h
@@ -376,7 +376,7 @@ enum ipv6_nd_suppress_ra_status {
 
 extern void rtadv_vrf_init(struct zebra_vrf *zvrf);
 extern void rtadv_vrf_terminate(struct zebra_vrf *zvrf);
-extern void rtadv_stop_ra(struct interface *ifp);
+extern void rtadv_stop_ra(struct interface *ifp, bool if_down_event);
 extern void rtadv_stop_ra_all(void);
 extern void rtadv_cmd_init(void);
 extern void rtadv_if_init(struct zebra_if *zif);
@@ -446,7 +446,7 @@ static inline void rtadv_delete_prefix(struct zebra_if *zif,
 				       const struct prefix *p)
 {
 }
-static inline void rtadv_stop_ra(struct interface *ifp)
+static inline void rtadv_stop_ra(struct interface *ifp, bool if_down_event)
 {
 }
 static inline void rtadv_stop_ra_all(void)
-- 
2.39.5

