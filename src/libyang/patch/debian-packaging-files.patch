From 99afc75d62942e1e4a4d576a880c697ecb0bab06 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <sarcot@microsoft.com>
Date: Fri, 1 Jul 2022 10:30:48 -0700
Subject: [PATCH] Add debian packaging files.

Libyang does have a custom cmake target that can make these files, but
it breaks several things. Building for another architecture doesn't
cleanly work unless you happen to enable language bindings in your
initial CMake call (otherwise, it will use the default C++ compiler
instead of whatever is set in the environment variable). In addition,
objcopy at the end doesn't appear to use the target
architecture-specific version for whatever reason.

Make things cleaner by just creating the debian files. In these files,
bump up the compat level, remove the hardcoded debug packages (dbgsym
packages are automatically generated), and rely on debhelper to do the
configure/build.

Signed-off-by: Saikrishna Arcot <sarcot@microsoft.com>
---
 debian/changelog               | 23 +++++++++++++++++++++
 debian/compat                  |  1 +
 debian/control                 | 37 ++++++++++++++++++++++++++++++++++
 debian/copyright               | 28 +++++++++++++++++++++++++
 debian/libyang-cpp-dev.install |  3 +++
 debian/libyang-cpp.install     |  1 +
 debian/libyang-dev.install     |  3 +++
 debian/libyang.install         |  5 +++++
 debian/python3-yang.install    |  1 +
 debian/rules                   | 16 +++++++++++++++
 debian/source/format           |  1 +
 11 files changed, 119 insertions(+)
 create mode 100644 debian/changelog
 create mode 100644 debian/compat
 create mode 100644 debian/control
 create mode 100644 debian/copyright
 create mode 100644 debian/libyang-cpp-dev.install
 create mode 100644 debian/libyang-cpp.install
 create mode 100644 debian/libyang-dev.install
 create mode 100644 debian/libyang.install
 create mode 100644 debian/python3-yang.install
 create mode 100755 debian/rules
 create mode 100644 debian/source/format

diff --git a/debian/changelog b/debian/changelog
new file mode 100644
index 00000000..421609c7
--- /dev/null
+++ b/debian/changelog
@@ -0,0 +1,23 @@
+libyang (1.0.73) stable; urgency=low
+
+  * VERSION bump to version 1.0.73 (Radek Krejci)
+
+  * SOVERSION bump to version 1.2.2 (Radek Krejci)
+
+  * JSON parser CHANGE respect STRICT flag and if not set, ignore unknown data (Radek Krejci)
+
+  * VERSION bump to version 1.0.72 (Radek Krejci)
+
+  * SOVERSION bump to version 1.2.1 (Radek Krejci)
+
+  * schema parsers BUGFIX duplicating iffeature expression data (Radek Krejci)
+
+  * VERSION bump to version 1.0.71 (Radek Krejci)
+
+  * SOVERSION bump to version 1.2.0 (Radek Krejci)
+
+  * schema parsers BUGFIX creating implicit cases when augmenting choice (Radek Krejci)
+
+  * Merge pull request #891 from opensourcerouting/api_tracing (Michal Vasko)
+
+ -- sarcot <sarcot@contoso.com>  Fri, 1 Jul 2022 16:46:13 +0000
diff --git a/debian/compat b/debian/compat
new file mode 100644
index 00000000..f599e28b
--- /dev/null
+++ b/debian/compat
@@ -0,0 +1 @@
+10
diff --git a/debian/control b/debian/control
new file mode 100644
index 00000000..cb182fa4
--- /dev/null
+++ b/debian/control
@@ -0,0 +1,37 @@
+Source: libyang
+Maintainer: CESNET <rkrejci@cesnet.cz>
+Priority: extra
+Standards-Version: 3.8.2
+Build-Depends: debhelper (>= 10)
+Homepage: https://github.com/CESNET/libyang
+
+Package: libyang
+Depends: libpcre3, ${shlibs:Depends}
+Conflicts: libyang-experimental (= 1.0)
+Section: libs
+Architecture: any
+Description: Libyang is YANG data modelling language parser and toolkit written (and providing API) in C.
+
+Package: libyang-dev
+Depends: libpcre3-dev, libyang (= ${binary:Version})
+Section: libdevel
+Architecture: any
+Description: Headers of libyang library.
+
+Package: libyang-cpp
+Depends: libyang (= ${binary:Version})
+Section: libs
+Architecture: any
+Description: Bindings of libyang library to C++ language.
+
+Package: libyang-cpp-dev
+Depends: libpcre3-dev, libyang-cpp (= ${binary:Version})
+Section: libdevel
+Architecture: any
+Description: Headers of bindings to c++ language libyang library.
+
+Package: python3-yang
+Depends: libyang (= ${binary:Version}), libyang-cpp (= ${binary:Version})
+Section: libs
+Architecture: any
+Description: Bindings of libyang library to python3 language.
diff --git a/debian/copyright b/debian/copyright
new file mode 100644
index 00000000..f7cafac5
--- /dev/null
+++ b/debian/copyright
@@ -0,0 +1,28 @@
+Copyright (c) 2015-2016, CESNET
+All rights reserved.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are met:
+
+* Redistributions of source code must retain the above copyright notice, this
+  list of conditions and the following disclaimer.
+
+* Redistributions in binary form must reproduce the above copyright notice,
+  this list of conditions and the following disclaimer in the documentation
+  and/or other materials provided with the distribution.
+
+* Neither the name of libyang nor the names of its
+  contributors may be used to endorse or promote products derived from
+  this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
diff --git a/debian/libyang-cpp-dev.install b/debian/libyang-cpp-dev.install
new file mode 100644
index 00000000..e56e41ed
--- /dev/null
+++ b/debian/libyang-cpp-dev.install
@@ -0,0 +1,3 @@
+usr/lib/*/libyang-cpp.so
+usr/include/libyang/*.hpp
+usr/lib/*/pkgconfig/libyang-cpp.pc
diff --git a/debian/libyang-cpp.install b/debian/libyang-cpp.install
new file mode 100644
index 00000000..2157465b
--- /dev/null
+++ b/debian/libyang-cpp.install
@@ -0,0 +1 @@
+usr/lib/*/libyang-cpp.so.*
\ No newline at end of file
diff --git a/debian/libyang-dev.install b/debian/libyang-dev.install
new file mode 100644
index 00000000..bb04ac28
--- /dev/null
+++ b/debian/libyang-dev.install
@@ -0,0 +1,3 @@
+usr/lib/*/libyang.so
+usr/lib/*/pkgconfig/libyang.pc
+usr/include/libyang/*.h
diff --git a/debian/libyang.install b/debian/libyang.install
new file mode 100644
index 00000000..249a5291
--- /dev/null
+++ b/debian/libyang.install
@@ -0,0 +1,5 @@
+usr/bin/yanglint
+usr/bin/yangre
+usr/share/man/man1
+usr/lib/*/libyang.so.*
+usr/lib/*/libyang/*
diff --git a/debian/python3-yang.install b/debian/python3-yang.install
new file mode 100644
index 00000000..3272cd65
--- /dev/null
+++ b/debian/python3-yang.install
@@ -0,0 +1 @@
+usr/lib/python3/dist-packages/*
diff --git a/debian/rules b/debian/rules
new file mode 100755
index 00000000..9308403e
--- /dev/null
+++ b/debian/rules
@@ -0,0 +1,16 @@
+#!/usr/bin/make -f
+# -*- makefile -*-
+# Uncomment this to turn on verbose mode.
+export DH_VERBOSE=1
+
+%:
+	dh $@
+
+override_dh_auto_configure:
+	dh_auto_configure -- -DENABLE_LYD_PRIV=ON -DGEN_LANGUAGE_BINDINGS=ON -DGEN_PYTHON_VERSION=2
+
+override_dh_makeshlibs:
+	dh_makeshlibs -Xextensions -Xuser_types
+
+override_dh_auto_test:
+	ctest --output-on-failure
diff --git a/debian/source/format b/debian/source/format
new file mode 100644
index 00000000..163aaf8d
--- /dev/null
+++ b/debian/source/format
@@ -0,0 +1 @@
+3.0 (quilt)
-- 
2.25.1

