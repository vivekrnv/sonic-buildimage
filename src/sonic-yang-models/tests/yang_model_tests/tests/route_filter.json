{
    "ROUTE_REDISTRIBUTE_VALID": {
        "desc": "Configure route redistribution table."
    },

    "ROUTE_REDISTRIBUTE_INVALID_RT_MAP_CNT": {
        "desc": "Referring 2 route map, when 1 allowed",
        "eStrKey" : "LeafRef"
    },

    "ROUTE_REDISTRIBUTE_NON_EXIST_RT_MAP": {
        "desc": "Referring non-existing ROUTE_MAP table",
        "eStrKey" : "LeafRef"
    },
    "ROUTE_MAP_VALID": {
        "desc": "Configure route map table."
    },
    "ROUTE_MAP_INVALID_STMT": {
        "desc": "Configure route map table with wrong value for stmt_name.",
        "eStrKey": "InvalidValue",
        "eStr": ["stmt_name"]
    },
    "ROUTE_MAP_INVALID_OPERATION_TYPE": {
        "desc": "Configure route map table with invalid route operation type.",
        "eStrKey": "InvalidValue",
        "eStr": ["route_operation"]
    },
    "ROUTE_MAP_INVALID_MATCH_INTF": {
        "desc": "Configure route map table with invalid match interface name.",
        "eStrKey": "InvalidValue",
        "eStr": ["match_interface"]
    },
    "ROUTE_MAP_INVALID_MATCH_PREFIX": {
        "desc": "Configure route map table with non-existent match prefix set name.",
        "eStrKey": "LeafRef"
    },
    "ROUTE_MAP_INVALID_MATCH_SRC_VRF": {
        "desc": "Configure route map table with non-existent match source VRF name.",
        "eStrKey": "InvalidValue",
        "eStr": ["match_src_vrf"]
    },
    "ROUTE_MAP_INVALID_MATCH_NEIGHBOR": {
        "desc": "Configure route map table with invalid match neighbor.",
        "eStrKey": "InvalidValue",
        "eStr": ["match_neighbor"]
    },
    "ROUTE_MAP_MATCH_NEIGHBOR_MUST_COND_FALSE": {
        "desc": "Configure route map table with more than one match neighbor in list.",
        "eStr": "Too many match_neighbor elements"
    },
    "ROUTE_MAP_INVALID_MATCH_COMMUNITY": {
        "desc": "Configure route map table with non-existent match community set name.",
        "eStrKey": "LeafRef"
    },
    "ROUTE_MAP_INVALID_MATCH_AS_PATH": {
        "desc": "Configure route map table with non-existent match AS_PATH set name.",
        "eStrKey": "LeafRef"
    },
    "ROUTE_MAP_INVALID_CALL_ROUTE_MAP": {
        "desc": "Configure route map table with non-existent call route map name.",
        "eStrKey": "LeafRef"
    },
    "ROUTE_MAP_INVALID_SET_METRIC_ACTION": {
        "desc": "Configure route map table with invalid set metric action type.",
        "eStrKey": "InvalidValue",
        "eStr": ["set_metric_action"]
    },
    "ROUTE_MAP_INVALID_SET_EXT_COMMUNITY": {
        "desc": "Configure route map table with non-existent set extended community set name.",
        "eStrKey": "LeafRef"
    },
    "ROUTE_PREFIX_VALID": {
        "desc": "Configure prefix table."
    },
    "ROUTE_PREFIX_INVALID_MODE_ENUM": {
        "desc": "Referring invalid Mode",
        "eStrKey": "InvalidValue"
    },
    "ROUTE_PREFIX_INVALID_SEQ_NO": {
        "desc": "Out of range seqence number",
        "eStrKey": "Range"
    },
    "ROUTE_PREFIX_INVALID_IP_PREFIX": {
        "desc": "Invalid IP prefix",
        "eStrKey": "InvalidValue"
    },

    "BGP_COMMUNITY_VALID": {
        "desc": "Configure BGP community table."
    },
    "BGP_COMMUNITY_INVALID_ACTION": {
        "desc": "Referring invalid action",
        "eStrKey": "InvalidValue"
    },
    "BGP_EXT_COMMUNITY_VALID": {
        "desc": "Configure BGP extended community table."
    },
    "BGP_AS_PATH_VALID": {
        "desc": "Configure BGP AS path table."
    },
    "ROUTE_MAP_MATCH_TAG_MUST_COND_FALSE": {
        "desc": "Configure route map table with more than one match tag in list.",
        "eStr": "Too many match_tag elements"
    }

}

