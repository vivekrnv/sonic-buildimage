# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# Build and push sonic-mgmt image

schedules:
- cron: "0 8 * * *"
  branches:
    include:
    - master
  always: true

trigger: none
pr:
  branches:
    include:
    - master
  paths:
    include:
    - dockers/docker-sonic-mgmt

resources:
  repositories:
  - repository: sonic-mgmt
    type: github
    name: sonic-net/sonic-mgmt
    ref: master
    endpoint: sonic-net

parameters:
- name: registry_url
  type: string
  default: sonicdev-microsoft.azurecr.io
- name: registry_conn
  type: string
  default: sonicdev

stages:
- stage: Build
  jobs:
  - job: Build
    pool: sonicso1ES-amd64
    timeoutInMinutes: 360
    steps:
    - template: cleanup.yml
    - checkout: self
      clean: true

    - script: |
        set -x
        sudo setfacl -R -b $(Agent.BuildDirectory)
      displayName: 'setfacl'

    - bash: |
        set -xe
        git submodule update --init --recursive -- src/sonic-platform-daemons src/sonic-genl-packet src/sonic-sairedis src/ptf src/sonic-device-data src/sonic-dash-api

        make SONIC_BUILD_JOBS=$(nproc) DEFAULT_CONTAINER_REGISTRY=publicmirror.azurecr.io ENABLE_DOCKER_BASE_PULL=y configure PLATFORM=generic DOCKER_BUILDKIT=0
        make -f Makefile.work BLDENV=bullseye SONIC_BUILD_JOBS=$(nproc) DEFAULT_CONTAINER_REGISTRY=publicmirror.azurecr.io ENABLE_DOCKER_BASE_PULL=y LEGACY_SONIC_MGMT_DOCKER=y target/docker-sonic-mgmt.gz
        cp target -r $(Build.ArtifactStagingDirectory)/target
        docker load -i target/docker-sonic-mgmt.gz
        docker tag docker-sonic-mgmt $REGISTRY_SERVER/docker-sonic-mgmt:mixed
      env:
        REGISTRY_SERVER: ${{ parameters.registry_url }}
      displayName: Build docker-sonic-mgmt.gz

    - publish:  $(Build.ArtifactStagingDirectory)
      artifact: 'docker-sonic-mgmt'
      displayName: "Archive docker image sonic-mgmt"

  - job: validate_docker_image_and_upload
    pool: sonicso1ES-amd64
    timeoutInMinutes: 360
    dependsOn: Build
    steps:
      - checkout: sonic-mgmt
        clean: true
        fetchDepth: 0
        displayName: 'Checkout sonic-mgmt'

      - download: current
        artifact: 'docker-sonic-mgmt'
        displayName: "Download docker image sonic-mgmt"

      - script: |
          set -ex

          docker load -i $(Pipeline.Workspace)/docker-sonic-mgmt/target/docker-sonic-mgmt.gz

          cd ansible
          sudo ./setup-management-network.sh -d
          cd ../
          docker rm -f sonic-mgmt

          ./setup-container.sh -n sonic-mgmt -d /data -i docker-sonic-mgmt -v
          docker exec sonic-mgmt bash -c "echo 'Container is running' && ps aux"
        displayName: 'Setup sonic-mgmt docker container'

      - bash: |
          set -ex

          docker tag docker-sonic-mgmt:latest $REGISTRY_SERVER/docker-sonic-mgmt:mixed
        env:
          REGISTRY_SERVER: ${{ parameters.registry_url }}
        displayName: 'Tag docker-sonic-mgmt'

      - task: Docker@2
        displayName: Upload image
        condition: succeeded()
        inputs:
          containerRegistry: ${{ parameters.registry_conn }}
          repository: docker-sonic-mgmt
          command: push
          tags: mixed
